// –°–∏—Å—Ç–µ–º–∞ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã
const isDev = import.meta.env.DEV;

// –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è production
const noop = () => {};

// –í production —Ä–µ–∂–∏–º–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –ª–æ–≥–∏
if (!isDev) {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  const originalConsole = {
    log: console.log,
    warn: console.warn,
    info: console.info,
    debug: console.debug,
    error: console.error
  };
  
  // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  console.log = noop;
  console.warn = noop;
  console.info = noop;
  console.debug = noop;
  console.trace = noop;
  
  // –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–µ–º error –ª–æ–≥–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ
  console.error = (...args) => {
    const message = args[0];
    if (typeof message === 'string' && 
        (message.includes('Failed to load') || 
         message.includes('Network Error') ||
         message.includes('üö® CRITICAL') ||
         message.includes('Error during build'))) {
      originalConsole.error(...args);
    }
  };
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Å–ª–æ–≤–Ω—ã–µ –ª–æ–≥–≥–µ—Ä—ã
export const devLog = isDev ? console.log.bind(console) : noop;
export const devWarn = isDev ? console.warn.bind(console) : noop;
export const devError = isDev ? console.error.bind(console) : noop;

export default {
  log: devLog,
  warn: devWarn,
  error: devError,
};